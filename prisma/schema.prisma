// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  name     String
  username String  @unique
  email    String  @unique
  phone    String? @unique
  website  String? @unique

  address Address?
  company Company?

  posts    Post[]
  comments Comment[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([username, email, phone, website])
  @@map("users")
}

model Company {
  id          String @id @default(cuid())
  name        String
  catch_phrase String
  bs          String

  user_id String @unique
  user    User   @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([name])
  @@map("companies")
}

model Address {
  id      String @id @default(cuid())
  street  String
  suite   String
  city    String
  zipcode String
  geo     Json

  user_id String @unique
  user    User   @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([street, suite, city, zipcode])
  @@map("addresses")
}

model Post {
  id        String    @id @default(cuid())
  title     String    @unique
  body      String
  published Boolean?   @default(true)
  user_id String
  user    User      @relation(fields: [user_id], references: [id])
  comments  Comment[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([title])
  @@map("posts")
}

model Comment {
  id      String @id @default(cuid())
  name    String
  email   String
  body    String
  post_id String
  post    Post   @relation(fields: [post_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User[]

  @@index([name, email])
  @@map("comments")
}
